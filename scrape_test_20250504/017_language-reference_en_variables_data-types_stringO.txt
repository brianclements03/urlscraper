String() | Arduino Documentation
/
 
ARDUINO.CC
 
Home 
/ 
Programming 
/ 
Language Reference 
/ 
Variables 
/ 
String() 
 
String()
Last revision 
05/20/2024
Description
Constructs an instance of the String class. There are multiple versions that construct Strings from different data types (i.e. format them as sequences of characters), including:
a constant string of characters, in double quotes (i.e. a char array)
a single constant character, in single quotes
another instance of the String object
a constant integer or long integer
a constant integer or long integer, using a specified base
an integer or long integer variable
an integer or long integer variable, using a specified base
a float or double, using a specified decimal places
Constructing a String from a number results in a string that contains the ASCII representation of that number. The default is base ten, so
1
String
 thisString 
=
 
String
(
13
)
;
gives you the String "13". You can use other bases, however. For
example,
1
String
 thisString 
=
 
String
(
13
,
 HEX
)
;
gives you the String "d", which is the hexadecimal representation of the
decimal value 13. Or if you prefer binary,
1
String
 thisString 
=
 
String
(
13
,
 BIN
)
;
gives you the String "1101", which is the binary representation of 13.
Syntax
String
(
val
)
String
(
val
,
 base
)
String
(
val
,
 decimalPlaces
)
Parameters
val
: a variable to format as a String. Allowed data types: string char, byte, int, long, unsigned int, unsigned long, float, double.
base
: (optional) the base in which to format an integral value.
decimalPlaces
: 
only if val is float or double
. The desired decimal places.
Returns
An instance of the String class.
Example Code
All of the following are valid declarations for Strings.
1
String
 stringOne 
=
 
"Hello String"
;
                    
// using a constant String
2
    
String
 stringOne 
=
 
String
(
'a'
)
;
                       
// converting a constant char into a String
3
    
String
 stringTwo 
=
 
String
(
"This is a string"
)
;
        
// converting a constant string into a String object
4
    
String
 stringOne 
=
 
String
(
stringTwo 
+
 
" with more"
)
;
  
// concatenating two strings
5
    
String
 stringOne 
=
 
String
(
13
)
;
                        
// using a constant integer
6
    
String
 stringOne 
=
 
String
(
analogRead
(
0
)
,
 DEC
)
;
        
// using an int and a base
7
    
String
 stringOne 
=
 
String
(
45
,
 HEX
)
;
                   
// using an int and a base (hexadecimal)
8
    
String
 stringOne 
=
 
String
(
255
,
 BIN
)
;
                  
// using an int and a base (binary)
9
    
String
 stringOne 
=
 
String
(
millis
(
)
,
 DEC
)
;
             
// using a long and a base
10
    
String
 stringOne 
=
 
String
(
5.698
,
 
3
)
;
                  
// using a float and the decimal places
Functions
charAt()
compareTo()
concat()
c_str()
endsWith()
equals()
equalsIgnoreCase()
getBytes()
indexOf()
lastIndexOf()
length()
remove()
replace()
reserve()
setCharAt()
startsWith()
substring()
toCharArray()
toDouble()
toInt()
toFloat()
toLowerCase()
toUpperCase()
trim()
Operators
[] (element access)
+ (concatenation)
+= (append)
== (comparison)
> (greater than)
>= (greater than or equal to)
< (less than)
<= (less than or equal to)
!= (different from)
See also
String Tutorials
Suggest changes
The content on 
docs.arduino.cc
 is facilitated through a public 
GitHub repository
. If you see anything wrong, you can edit this page 
here
.
Need support?
Help Center
Ask the Arduino Forum
Discover Arduino Discord
License
The Arduino documentation is licensed under the 
Creative Commons Attribution-Share Alike 4.0
 license.
Was this article helpful?
© 2025 Arduino
Terms Of Service
Privacy Policy
Security
Cookie Settings
 






×


Notice
We use cookie for technical purpose and, with your consent, also for analytical and profiling purpose as specified in our cookie policy. You can express your consent by selecting the cookies you intend to accept by clicking “Configure”.  If you wish to continue browsing without cookies that are not strictly necessary, you can deny consent by clicking on “Reject” or by closing this banner by clicking the x in the upper right corner.
Press again to continue 0/1
CONFIGURE
REJECT
ACCEPT